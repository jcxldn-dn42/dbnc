#!/bin/bash

ip link add name lo-pub type dummy

mapfile -t IP_ADDRS_LIST < <(echo $IP_ADDRS | tr "," "\n")
for address in ${IP_ADDRS_LIST[@]}; do
    ip addr add $address dev lo-pub
done

ip link set lo-pub up


# Re-install ufw if files are not present (eg. if a volume mount is being used)
if [ ! -f "/etc/ufw/ufw.conf" ];
then
    echo "Re-installing ufw to re-add files to /etc/ufw..."
    mkdir -p /etc/ufw/applications.d
    apk fix --reinstall ufw
fi


# -----
# Add forward rules for specified IP ranges
# -----
# (part 1): Convert the CSVs (FORWARD_IP_RANGES, FORWARD_INTERFACES) into an array
mapfile -t FORWARD_IP_RANGES_LIST < <(echo $FORWARD_IP_RANGES | tr "," "\n")
mapfile -t FORWARD_INTERFACES_LIST < <(echo $FORWARD_INTERFACES | tr "," "\n")
mapfile -t FORWARD_ETH0_TO_LIST < <(echo $FORWARD_ETH0_TO | tr "," "\n")

# (part 2): Iterate over each item in the array and add a ufw routing rule for it
for range in ${FORWARD_IP_RANGES_LIST[@]}; do
    for interface in ${FORWARD_INTERFACES_LIST[@]}; do
        echo "Adding routing rule for iface '$interface' for range '$range'"
        ufw route allow in on $interface from $range out on $interface to $range
    done
    # Routing rules between eth0 and list (allow other containers to route TCP/UDP (icmp works anyways) via this one)
    for interface in ${FORWARD_ETH0_TO_LIST[@]}; do
        echo "Adding routing rule for to iface '$interface' from iface 'eth0' for range '$range'"
        ufw route allow in on eth0 from $range out on $interface to $range
        echo "Adding routing rule for to iface 'eth0' from iface '$interface for range '$range'"
        ufw route allow in on $interface from $range out on eth0 to $range
    done
done

echo "Attempting to enable ufw..."
ufw enable


if [ -f "/pre-start.hook" ];
then
    echo "Found pre-start script! Running..."
    chmod +x /pre-start.hook
    /pre-start.hook
fi

echo "Ready! Sitting in a /dev/null tail until container is stopped."
tail -f /dev/null